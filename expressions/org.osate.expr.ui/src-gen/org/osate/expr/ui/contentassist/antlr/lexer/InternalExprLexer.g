
/*
 * generated by Xtext
 */
lexer grammar InternalExprLexer;


@header {
package org.osate.expr.ui.contentassist.antlr.lexer;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}




VIRTUAL_PROCESSOR : ('V'|'v')('I'|'i')('R'|'r')('T'|'t')('U'|'u')('A'|'a')('L'|'l')'_'('P'|'p')('R'|'r')('O'|'o')('C'|'c')('E'|'e')('S'|'s')('S'|'s')('O'|'o')('R'|'r');

SUBPROGRAMGROUP : ('S'|'s')('U'|'u')('B'|'b')('P'|'p')('R'|'r')('O'|'o')('G'|'g')('R'|'r')('A'|'a')('M'|'m')('G'|'g')('R'|'r')('O'|'o')('U'|'u')('P'|'p');

SUBCOMPONENT : ('S'|'s')('U'|'u')('B'|'b')('C'|'c')('O'|'o')('M'|'m')('P'|'p')('O'|'o')('N'|'n')('E'|'e')('N'|'n')('T'|'t');

THREAD_GROUP : ('T'|'t')('H'|'h')('R'|'r')('E'|'e')('A'|'a')('D'|'d')'_'('G'|'g')('R'|'r')('O'|'o')('U'|'u')('P'|'p');

VIRTUAL_BUS : ('V'|'v')('I'|'i')('R'|'r')('T'|'t')('U'|'u')('A'|'a')('L'|'l')'_'('B'|'b')('U'|'u')('S'|'s');

CLASSIFIER : ('C'|'c')('L'|'l')('A'|'a')('S'|'s')('S'|'s')('I'|'i')('F'|'f')('I'|'i')('E'|'e')('R'|'r');

CONNECTION : ('C'|'c')('O'|'o')('N'|'n')('N'|'n')('E'|'e')('C'|'c')('T'|'t')('I'|'i')('O'|'o')('N'|'n');

SUBPROGRAM : ('S'|'s')('U'|'u')('B'|'b')('P'|'p')('R'|'r')('O'|'o')('G'|'g')('R'|'r')('A'|'a')('M'|'m');

PROCESSOR : ('P'|'p')('R'|'r')('O'|'o')('C'|'c')('E'|'e')('S'|'s')('S'|'s')('O'|'o')('R'|'r');

Subclause : ('S'|'s')('U'|'u')('B'|'b')('C'|'c')('L'|'l')('A'|'a')('U'|'u')('S'|'s')('E'|'e');

ABSTRACT : ('A'|'a')('B'|'b')('S'|'s')('T'|'t')('R'|'r')('A'|'a')('C'|'c')('T'|'t');

FEATURE : ('F'|'f')('E'|'e')('A'|'a')('T'|'t')('U'|'u')('R'|'r')('E'|'e');

MEMEORY : ('M'|'m')('E'|'e')('M'|'m')('E'|'e')('O'|'o')('R'|'r')('Y'|'y');

PROCESS : ('P'|'p')('R'|'r')('O'|'o')('C'|'c')('E'|'e')('S'|'s')('S'|'s');

Library : ('L'|'l')('I'|'i')('B'|'b')('R'|'r')('A'|'a')('R'|'r')('Y'|'y');

DEVICE : ('D'|'d')('E'|'e')('V'|'v')('I'|'i')('C'|'c')('E'|'e');

SYSTEM : ('S'|'s')('Y'|'y')('S'|'s')('T'|'t')('E'|'e')('M'|'m');

THREAD : ('T'|'t')('H'|'h')('R'|'r')('E'|'e')('A'|'a')('D'|'d');

Record : ('R'|'r')('E'|'e')('C'|'c')('O'|'o')('R'|'r')('D'|'d');

String : ('S'|'s')('T'|'t')('R'|'r')('I'|'i')('N'|'n')('G'|'g');

Tuple : ('T'|'t')('U'|'u')('P'|'p')('L'|'l')('E'|'e');

Union : ('U'|'u')('N'|'n')('I'|'i')('O'|'o')('N'|'n');

DATA : ('D'|'d')('A'|'a')('T'|'t')('A'|'a');

FLOW : ('F'|'f')('L'|'l')('O'|'o')('W'|'w');

MODE : ('M'|'m')('O'|'o')('D'|'d')('E'|'e');

Bool : ('B'|'b')('O'|'o')('O'|'o')('L'|'l');

List : ('L'|'l')('I'|'i')('S'|'s')('T'|'t');

Real : ('R'|'r')('E'|'e')('A'|'a')('L'|'l');

Type : ('T'|'t')('Y'|'y')('P'|'p')('E'|'e');

QuestionMarkQuestionMarkQuestionMark : '?''?''?';

BUS : ('B'|'b')('U'|'u')('S'|'s');

Bag : ('B'|'b')('A'|'a')('G'|'g');

Def : ('D'|'d')('E'|'e')('F'|'f');

Int : ('I'|'i')('N'|'n')('T'|'t');

Map : ('M'|'m')('A'|'a')('P'|'p');

Set : ('S'|'s')('E'|'e')('T'|'t');

Val : ('V'|'v')('A'|'a')('L'|'l');

Var : ('V'|'v')('A'|'a')('R'|'r');

HyphenMinusGreaterThanSign : '-''>';

ColonColon : ':'':';

LeftParenthesis : '(';

RightParenthesis : ')';

Asterisk : '*';

FullStop : '.';

Colon : ':';

Semicolon : ';';

EqualsSign : '=';

LeftCurlyBracket : '{';

RightCurlyBracket : '}';



RULE_SL_COMMENT : '--' ~(('\n'|'\r'))* ('\r'? '\n')?;

fragment RULE_EXPONENT : ('e'|'E') ('+'|'-')? RULE_DIGIT+;

fragment RULE_INT_EXPONENT : ('e'|'E') '+'? RULE_DIGIT+;

RULE_REAL_LIT : RULE_DIGIT+ ('_' RULE_DIGIT+)* '.' RULE_DIGIT+ ('_' RULE_DIGIT+)* RULE_EXPONENT?;

RULE_INTEGER_LIT : RULE_DIGIT+ ('_' RULE_DIGIT+)* ('#' RULE_BASED_INTEGER '#' RULE_INT_EXPONENT?|RULE_INT_EXPONENT?);

fragment RULE_DIGIT : '0'..'9';

fragment RULE_EXTENDED_DIGIT : ('0'..'9'|'a'..'f'|'A'..'F');

fragment RULE_BASED_INTEGER : RULE_EXTENDED_DIGIT ('_'? RULE_EXTENDED_DIGIT)*;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ID : ('a'..'z'|'A'..'Z') ('_'? ('a'..'z'|'A'..'Z'|'0'..'9'))*;

RULE_WS : (' '|'\t'|'\r'|'\n')+;



